%{
  from gyb_utils import (
  autogenerated_warning, rawResponseBodies)
}%
${autogenerated_warning()}

import Foundation
import NIO
import NIOFoundationCompat

% for rawResponseBody in rawResponseBodies:
// MARK:  Default implementation for decoding
extension Networking where RawResponseBody == ${rawResponseBody} {

  @inlinable
  public func decode<E>(_ endpoint: E, body: RawResponseBody) throws -> E.ResponseBody
  where E: Endpoint, E.ResponseBody: Decodable {
    switch endpoint.acceptType {
    case .json:
    % if rawResponseBody == "ByteBufferView":
      return try jsonDecoder.decode(E.ResponseBody.self, from: .init(body))
    % else:
      return try jsonDecoder.decode(E.ResponseBody.self, from: body)
    % end
    case .none: fatalError("Should never be called")
    case .wwwFormUrlEncoded:
      fatalError("Unsupported")
    }
  }

  @inlinable
  public func decode<E>(_ endpoint: E, body: RawResponseBody) throws -> E.ResponseBody
  where E: Endpoint, E.ResponseBody: CustomResponseBody {
    % if rawResponseBody == "ByteBuffer":
    try .init(body.viewBytes(at: body.readerIndex, length: body.readerIndex) ?? ByteBufferView())
    % else:
    try .init(body)
    % end
  }

}
